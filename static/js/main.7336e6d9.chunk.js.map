{"version":3,"sources":["images/boba.jpg","images/ramen.jpg","images/curry.jpg","images/hotpot.jpg","images/matcha.jpg","images/sushi.png","images/dimsum.jpg","images/chicken-rice.png","images/crawfish.png","images/steak.png","components/Card.js","components/CardsRender.js","App.js","index.js"],"names":["Card","props","style","border","card","borderStyle","backgroundColor","cursor","className","onClick","addScore","cards","makeCardChecked","src","title","CardsRender","score","highScore","images","boba","checked","steak","dimsum","ramen","crawfish","sushi","chickenRice","matcha","curry","hotpot","useState","setNewCards","useEffect","newCards","array","i","length","j","Math","floor","random","temp","shuffleArray","map","App","setScore","setHighScore","id","forEach","resetCards","target","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7336e6d9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/boba.9c68dbc4.jpg\";","export default __webpack_public_path__ + \"static/media/ramen.aec29cb1.jpg\";","export default __webpack_public_path__ + \"static/media/curry.c7cc4197.jpg\";","export default __webpack_public_path__ + \"static/media/hotpot.b20d547d.jpg\";","export default __webpack_public_path__ + \"static/media/matcha.529e5fb0.jpg\";","export default __webpack_public_path__ + \"static/media/sushi.6cd79316.png\";","export default __webpack_public_path__ + \"static/media/dimsum.526a0f08.jpg\";","export default __webpack_public_path__ + \"static/media/chicken-rice.612ae76f.png\";","export default __webpack_public_path__ + \"static/media/crawfish.7ceecee8.png\";","export default __webpack_public_path__ + \"static/media/steak.3deb7bd5.png\";","import react,{useState} from \"react\";\r\nimport \"../styles/card.css\"\r\n\r\nfunction Card(props) {\r\n    const style={\r\n        border:props.card.borderStyle,\r\n        backgroundColor: props.card.backgroundColor,\r\n        cursor:\"pointer\",\r\n        \r\n        //height:\"50rem\",\r\n    }\r\n    function whenClicked() {\r\n        props.addScore(props.card,props.cards)\r\n        props.makeCardChecked(props.card);\r\n    }\r\n    return (\r\n        <div className=\"Card\" onClick={whenClicked} style={style}>\r\n            <img src={props.card.src} ></img>\r\n            <label>{props.title}</label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import react, { useState, useEffect } from \"react\";\r\n\r\nimport boba from \"../images/boba.jpg\";\r\nimport ramen from \"../images/ramen.jpg\";\r\nimport curry from \"../images/curry.jpg\";\r\nimport hotpot from \"../images/hotpot.jpg\";\r\nimport matcha from \"../images/matcha.jpg\";\r\nimport sushi from \"../images/sushi.png\";\r\nimport dimsum from \"../images/dimsum.jpg\";\r\nimport chickenRice from \"../images/chicken-rice.png\";\r\nimport crawfish from \"../images/crawfish.png\";\r\nimport steak from \"../images/steak.png\";\r\nimport Card from \"./Card\";\r\nimport '../styles/cardRender.css';\r\n\r\nfunction CardsRender(props) {\r\n    const { score, highScore,addScore } = props;\r\n\r\n    const images = [\r\n        {\r\n            src: boba,\r\n            title: \"Boba\",\r\n            backgroundColor: \"rgb(54 145 154)\",\r\n            borderStyle: \"1px solid rgb(54 145 154)\",\r\n            checked: false,\r\n        },\r\n        {\r\n            src: steak,\r\n            title: \"Steak\",\r\n            backgroundColor: \"rgb(119 4 4)\",\r\n            borderStyle: \"1px solid rgb(119 4 4)\",\r\n            checked: false,\r\n        },\r\n        {\r\n            src: dimsum,\r\n            title: \"Dimsum\",\r\n            backgroundColor: \"rgb(111 31 0)\",\r\n            borderStyle: \"1px solid rgb(111 31 0)\",\r\n            checked: false,\r\n        },\r\n        {\r\n            src: ramen,\r\n            title: \"Ramen\",\r\n            backgroundColor: \"rgb(255 141 0)\",\r\n            borderStyle: \"1px solid rgb(255 141 0)\",\r\n            checked: false,\r\n        },\r\n        {\r\n            src: crawfish,\r\n            title: \"Crawfish\",\r\n            backgroundColor: \"rgb(52 52 60)\",\r\n            borderStyle: \"1px solid rgb(52 52 60)\",\r\n            checked: false,\r\n        },\r\n        {\r\n            src: sushi,\r\n            title: \"Sushi\",\r\n            backgroundColor: \"rgb(245 194 80)\",\r\n            borderStyle: \"1px solid rgb(245 194 80)\",\r\n            checked: false,\r\n        },\r\n        {\r\n            src: chickenRice,\r\n            title: \"Chicken Rice\",\r\n            backgroundColor: \"rgb(136 96 6)\",\r\n            borderStyle: \"1px solid rgb(136 96 6)\",\r\n            checked: false,\r\n        },\r\n        {\r\n            src: matcha,\r\n            title: \"Matcha Drink\",\r\n            backgroundColor: \"rgb(255 148 148)\",\r\n            borderStyle: \"1px solid rgb(255 148 148)\",\r\n            checked: false,\r\n        },\r\n        {\r\n            src: curry,\r\n            title: \"Curry\",\r\n            backgroundColor: \"rgb(189 166 82)\",\r\n            borderStyle: \"1px solid rgb(189 166 82)\",\r\n            checked: false,\r\n        },\r\n        {\r\n            src: hotpot,\r\n            title: \"Hotpot\",\r\n            backgroundColor: \"rgb(226 143 58)\",\r\n            borderStyle: \"1px solid rgb(226 143 58)\",\r\n            checked: false,\r\n        },\r\n    ];\r\n\r\n    const [cards, setNewCards] = useState(images);\r\n\r\n    // const shuffle = (newCards) => {\r\n    //     for (let i = newCards.length - 1; i > 0; i--) {\r\n    //         let randomIdx = Math.floor(Math.random() * i);\r\n    //         [newCards[randomIdx], newCards[i]] = [\r\n    //             newCards[i],\r\n    //             newCards[randomIdx],\r\n    //         ];\r\n    //     }\r\n    // };\r\n\r\n    function shuffleArray(array) {\r\n        for (var i = array.length - 1; i > 0; i--) {\r\n            var j = Math.floor(Math.random() * (i + 1));\r\n            var temp = array[i];\r\n            array[i] = array[j];\r\n            array[j] = temp;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const newCards = [...cards];\r\n        shuffleArray(newCards);\r\n        setNewCards(newCards);\r\n    }, [score, highScore]);\r\n\r\n    function makeCardChecked(card) {\r\n        card.checked=\"true\";\r\n    }\r\n    \r\n    return (\r\n        <div className=\"cardsContainer\">\r\n            {cards.map((card) => (\r\n                <Card card={card} cards={cards} title={card.title} addScore={addScore} makeCardChecked={makeCardChecked} />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardsRender;\r\n","import react, { useState } from \"react\";\nimport CardsRender from \"./components/CardsRender\";\nimport './styles/App.css'\n\nfunction App() {\n    const [score, setScore] = useState(0);\n    const [highScore, setHighScore] = useState(0);\n\n    function addScore(card,cards) {\n        if (card.checked) {\n          addHighScore();\n          resetScore();\n          resetCards(cards);\n        } else {\n          let newScore=score+1;\n            setScore(newScore);\n       }\n    }\n\n    function addHighScore() {\n        setHighScore(score);\n    }\n\n    function resetScore() {\n      let newScore = 0;\n        setScore(newScore);\n    }\n    function resetCards(cards) {\n      cards.forEach(card => {\n        card.checked=false;\n      });\n    }\n    return (\n        <div>\n            <h1 id=\"header\">Memory Game</h1>\n            <div id=\"scoreTable\">\n                Score:{score} High Score:{highScore}\n            </div>\n            <CardsRender\n                score={score}\n                highScore={highScore}\n                addScore={addScore}\n            />\n            <footer>\n                <a target=\"_blank\" href=\"https://github.com/CherniakYura\">My GitHub</a>\n               \n            </footer>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}